
@{
}

<!-- Content Header (Page header) -->
<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0">新增商品</h1>
            </div><!-- /.col -->           
        </div><!-- /.row -->
    </div><!-- /.container-fluid -->
</div>
<!-- /.content-header -->

<section class="content">
    <div id="FormTool" class="row">
        <div class="col-md-12">
            <!-- general form elements -->
            <div class="card card-outline card-info">
                <div class="card-header">
                    <h3 class="card-title">新增類別</h3>
                </div>
                <!-- /.card-header -->
                <!-- form start -->
                
                <div class="card-body">
                    <div class="form-group">
                        <div>
                            <label>商品封面</label>
                            <div v-on:click="ShowCoverImg">
                                <img v-bind:src="coverSrc"  height="200">
                            </div>
                            <vue-easy-lightbox v-bind:visible="coverVisible" v-bind:imgs="coverSrc" v-on:hide="CoverHandleHide"></vue-easy-lightbox>
                        </div>
                        <div>
                            <a v-on:click="SetCoverSrc" class="btn btn-primary">上傳圖片</a>
                        </div>
                    </div>  

                    <div class="form-group">
                        <label>名稱</label>
                        <input class="form-control" ref="nameInput" placeholder="輸入名稱">
                    </div>  
                        
                    <div class="form-group">
                        <label>描述</label>
                        <input class="form-control" ref="descInput" placeholder="輸入描述">
                    </div> 

                    <div class="form-group">
                        <label>價格</label>
                        <input class="form-control" ref="priceInput" placeholder="輸入價格" value=0>
                    </div> 

                    <div class="form-group">
                        <label>庫存</label>
                        <input class="form-control" ref="stockInput" placeholder="輸入庫存" value=0>
                    </div> 
                    
                    <div class="form-group">
                        <label>內容</label>
                        <textarea id="summernote"></textarea>
                    </div> 

                </div>
                <!-- /.card-body -->
                <div class="card-footer">
                    <a v-on:click="SubmitBtn" v-on:keydown.enter="SubmitBtn" class="btn btn-primary">Submit</a>
                </div>                
            </div>
            <!-- /.card -->
        </div>       
    </div><!-- /.container-fluid -->
</section>


@section Scripts{
    <script>  
        
        
        var FormTool = new Vue({
            el: '#FormTool',
            data:
            {
                createApi: baseurl + "/Product/api/Add",
                uploadEditorImageApi: baseurl + "/Product/api/UploadEditorImage",
                coverVisible: false,
                coverSrc: 'https://via.placeholder.com/1200/FFFFFF.png?text=1'
            },
            mounted: function(){
                var self = this;
                console.log('== mounted ==');
                $('#summernote').summernote({
                    height:300,
                    callbacks:{
                        onImageUpload: function(image) {
                            console.log('summernote onImageUpload');
                            self.UploadEditorImage(self.uploadEditorImageApi, image[0]);
                        }
                    }
                });


            },
            methods:
            {        
                ShowCoverImg: function() {
                    var self = this;
                    self.coverVisible = true;
                },

                CoverHandleHide: function() {
                    var self = this;
                    self.coverVisible = false;
                },

                SetCoverSrc: function() {

                },

                UploadEditorImage: function(api, obj){
                    var self = this;
                    var url = api;
                    let formData = new FormData();
                    formData.append('file', obj); //file為api之參數名稱
                    axios.post(url, formData, {
                                headers: {
                                    'Content-Type': 'multipart/form-data'
                                }
                            })
                        .then(function (result) {
                            console.log('Success:' + result.data.Success);
                            console.log('Msg:' + result.data.Msg);
                            console.log('Data:');
                            console.log(result.data.Data);  
                            $('#summernote').summernote('insertImage', result.data.Data);
                        })
                        .catch(function (error) {
                            if( error.response ){
                                console.log(error.response.Data); // => the response payload                                
                                alert('Success:' + error.response.data.Success + '\n' +
                                        'Msg:' + error.response.data.Msg);
                            }
                            else{
                                alert('post error'); 
                            }
                        });
                },               

                SubmitBtn: function () {
                    var self = this;

                    console.log($('#summernote').summernote('code'));

                    
                    self.categoryName = this.$refs.categoryNameInput.value;
                    console.log('submitBtn click');

                    if (self.ChkPostDataOk()) {
                        self.PostContent(self.getPostObj());
                    }
                },

                isEmpty: function (str) {
                    if (!str) {
                        return true;
                    }
                    else if (str.length === 0) {
                        return true;
                    }
                    return false;
                },

                ChkPostDataOk: function () {
                    var self = this;
                    if (self.isEmpty(self.categoryName)) {
                        console.log('ChkPostDataOk isEmpty');
                    }
                    else {
                        console.log('ChkPostDataOk success');
                        return true;
                    }
                    console.log('ChkPostDataOk error');
                    return false;
                },  

                getPostObj: function () {
                    var self = this;

                    var obj = {
                        ['Name']: self.categoryName
                    };

                    return obj;
                },

                PostContent: function (obj) {
                    var self = this;
                    var url = self.createApi;
                    console.log(url + ' post');
                    axios.post(url, obj)
                        .then(function (result) {
                            console.log('Success:' + result.data.success);
                            console.log('Msg:' + result.data.msg);
                            console.log('Data:');
                            console.log(result.data.data);
                            if(result.data.Success)
                            {
                                location.href = '@Url.Action("Index")';
                            }
                            else
                            {
                                alert('Success:' + result.data.Success + '\n' +
                                        'Msg:' + result.data.Msg);
                            }                           
                        })
                        .catch(function (error) {
                            if( error.response ){
                                console.log(error.response.data); // => the response payload 
                                alert('Success:' + error.response.data.Success + '\n' +
                                        'Msg:' + error.response.data.Msg);
                            }
                            else{
                                alert('post error'); 
                            }
                        });
                }
            }
        });

    </script>
}